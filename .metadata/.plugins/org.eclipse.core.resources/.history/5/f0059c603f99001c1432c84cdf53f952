package net.longvan.training.spring.excel;

import java.io.IOException;
import java.util.List;

import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletResponse;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import net.longvan.training.spring.model.User;

public class UserExcelExporter {
	private XSSFWorkbook workbook;
	private XSSFSheet sheet;
	private List<User> users;

	public UserExcelExporter(List<User> users) {
		super();
		this.users = users;
		workbook = new XSSFWorkbook();
		sheet = workbook.createSheet("User");
	}

	// Initialize first line
	private void writeHeaderLine() {

		Row row = sheet.createRow(0);
		CellStyle style = workbook.createCellStyle();
		XSSFFont font = workbook.createFont();
		font.setBold(true);
		font.setThemeColor(IndexedColors.BLACK.getIndex());
		style.setFont(font);

		Cell cell = row.createCell(0);

		createCell(row, 0, "id", style);
		createCell(row, 1, "name", style);
		createCell(row, 2, "birthDate", style);
		createCell(row, 3, "description", style);
		createCell(row, 4, "gender", style);
		createCell(row, 5, "address", style);
		createCell(row, 6, "phone", style);
		createCell(row, 7, "status", style);
		createCell(row, 8, "email", style);
		createCell(row, 9, "password", style);
	}

	// this method requires an integer argument which should be a column number
	private void createCell(Row row, int i, Object value, CellStyle style) {

		sheet.autoSizeColumn(i);
		Cell cell = row.createCell(i);
		if (value instanceof Integer) {
			cell.setCellValue((Integer) value);
		} else if (value instanceof Boolean) {
			cell.setCellValue((Boolean) value);
		} else {
			cell.setCellValue((String) value);
		}
		cell.setCellStyle(style);
	}

	// multi-lines initialization for file excel
	private void writeDataLines() {
		int rowCount = 1;

		CellStyle style = workbook.createCellStyle();
		XSSFFont font = workbook.createFont();
		font.setFontHeight(14);
		style.setFont(font);

		for (User user : users) {
			Row row = sheet.createRow(rowCount++);
			int columnCount = 0;

			createCell(row, columnCount++, user.getId(), style);
			createCell(row, columnCount++, user.getName(), style);
			createCell(row, columnCount++, user.getBirthDate(), style);
			createCell(row, columnCount++, user.getDescription(), style);
			createCell(row, columnCount++, user.getGender(), style);
			createCell(row, columnCount++, user.getAddress(), style);
			createCell(row, columnCount++, user.getPhone(), style);
			createCell(row, columnCount++, user.getStatus(), style);
			createCell(row, columnCount++, user.getEmail(), style);
			createCell(row, columnCount++, user.getPassword(), style);
		}
	}

	// export data to file excel
	public void export(HttpServletResponse response) throws IOException {
		writeHeaderLine();
		writeDataLines();

		ServletOutputStream outputStream = response.getOutputStream();
		workbook.write(outputStream);
		workbook.close();
		outputStream.close();
	}
}
